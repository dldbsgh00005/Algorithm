import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {

	static int L; // 골라야하는 개수
	static int C; // 총 문자 개수

	static String[] arr;

	static boolean[] used;

	static String str;

	static ArrayList<String> ai = new ArrayList<>();
	static ArrayList<String> bc = new ArrayList<>();

	static ArrayList<String> str_list = new ArrayList<>();

	public static void main(String[] args) throws IOException {
		
		
		
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		st = new StringTokenizer(br.readLine());
		L = Integer.parseInt(st.nextToken());
		C = Integer.parseInt(st.nextToken());

		ai.add("a");
		ai.add("e");
		ai.add("i");
		ai.add("o");
		ai.add("u");

		arr = new String[C];
		used = new boolean[C];

		str = "";

		st = new StringTokenizer(br.readLine());
		for (int i = 0; i < C; i++) {
			arr[i] = st.nextToken();
			// ai에 없으면 bc리스트에 넣기
			if (!ai.contains(arr[i])) {
				bc.add(arr[i]);
			}
		}

		Arrays.sort(arr);
//		LocalDateTime beforetime = LocalDateTime.now();
//		System.out.println(beforetime);
		
		dfs(0);
		
//		LocalDateTime aftertime = LocalDateTime.now();
//		System.out.println(aftertime);
		
		

	}// m

	static int dfs(int depth) {
		if(depth >= 1 && !checklength(str_list)) {
			return 0;
		}
		
		if (depth == L) {
			// 모음 한 개 이상 , 자음 두 개 이상이면 출력
			if (check(str_list)) {
				for (String str : str_list) {
					System.out.print(str);
				}
				System.out.println();
			}
			return 0;
		}

		for (int i = 0; i < C; i++) {
			if (used[i] == false) {
				used[i] = true;
				str_list.add(arr[i]); // 리스트에 문자 추가
				dfs(depth + 1);
				str_list.remove(arr[i]); // 리스트에 문자열 맨 끝 제거
				used[i] = false;
			}
		}
		return 0;
	}

	static boolean check(ArrayList<String> str_list) {
		int aicount = 0;
		int bccount = 0;

		

		for (int i = 0; i < str_list.size(); i++) {
			if (ai.contains(str_list.get(i))) {
				aicount++;
			} else {
				bccount++;
			}
		}
		if (aicount >= 1 && bccount >= 2) {
			return true;
		}

		return false;

	}
	
	static boolean checklength(ArrayList<String> str_list) {
		for (int i = 0; i < str_list.size()-1; i++) {
			if(str_list.get(i).compareTo(str_list.get(i+1))  > 0  ) {
				return false;
			}
		} // 따로 빼자..
		
		return true;
		
	}
	
}// c
