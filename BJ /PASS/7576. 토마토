import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main {

	static int N;
	static int M;

	static int[][] box;

	static int[] di = { 1, -1, 0, 0 };
	static int[] dj = { 0, 0, -1, 1 };

	static Queue<tomato> q = new LinkedList<>();

	static class tomato {

		int i;
		int j;
		int day;

		public tomato(int i, int j, int day) {
			this.i = i;
			this.j = j;
			this.day = day;
		}
	}

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		st = new StringTokenizer(br.readLine());
		M = Integer.parseInt(st.nextToken());
		N = Integer.parseInt(st.nextToken());
		
		box = new int[N][M];
		
		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j = 0; j < M; j++) {
				box[i][j] = Integer.parseInt(st.nextToken());
				if (box[i][j] == 1) {
					q.add(new tomato(i, j, 0));
				}
			}
		}
		
		if(checkZero() == true) {
			bfs();
		}else {
			System.out.println(0);
		}

		
		

	}// m

	static void bfs() {
		int day = 0;

		while (!q.isEmpty()) {
			tomato t = q.poll();
			day = t.day;

			for (int k = 0; k < 4; k++) {
				int i = t.i + di[k];
				int j = t.j + dj[k];
				if (i >= 0 && j >= 0 && i < N && j < M) {
					if (box[i][j] == 0) {
						box[i][j] = 1;
						q.add(new tomato(i, j, day + 1));
					}
				}
			}
		}

		if (checkZero() == true) {
			System.out.println(-1);
		} else {
			System.out.println(day);
		}

	}

	static boolean checkZero() {

		for (int[] bo : box) {
			for (int b : bo) {
				if (b == 0) {
					return true;
				}
			}
		}

		return false;
	}

}// c
