import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

class Solution {

	static int T;
	static int N;

	
	static Double[][] arr;

	static boolean[] visited;

//	static int[] mul_list ;
	static ArrayList<Double> mul_list = new ArrayList<>();;

	static Double mul;
	static Double max;

	public static void main(String args[]) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		T = Integer.parseInt(st.nextToken());
		for (int test_case = 1; test_case <= T; test_case++) {

			st = new StringTokenizer(br.readLine());
			N = Integer.parseInt(st.nextToken());

			arr = new Double[N][N];
			visited = new boolean[N];
			mul = 1d;
			max = -1d;

			for (int i = 0; i < N; i++) {
				st = new StringTokenizer(br.readLine());
				for (int j = 0; j < N; j++) {
					arr[i][j] = Double.valueOf(st.nextToken()) * 0.01d;
				}
			}
			
			dfs(0);
			
			max = max * 100;
			
			String fstring = String.format("%.6f", max);
			
			
			
			StringBuilder sb = new StringBuilder();
			sb.append("#"+test_case + " " + (fstring)  );
			System.out.println(sb);
			
		} // tc
	}// m

	static int dfs(int depth) {
		
		if(mul <= max) {
			return 0; 							// 이 부분, 왜 되는거지? MUL이 중간에 MAX 보다 웬만하면 무조건 작을텐데 .... ??
		}
		
		if (depth == N) {
//			System.out.println(mul);
			
			if(max < mul) {max=mul;}
			return 0;
		}

		for (int i = 0; i < N; i++) {
			if (visited[i] == false) {
				visited[i] = true;
				Double before_mul = mul;
				mul *= arr[depth][i];
				dfs(depth + 1);
				visited[i] = false;
				mul = before_mul;
				
			}
		}

		return 0;
	}

}// c
